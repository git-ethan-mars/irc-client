name: Run tests and show coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # На каждое выполнение job'ы будет автоматически создана новая виртуальная машина с последней версией Ubuntu
    # На ней и будут выполняться последующие шаги.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with unittest
      run: |
        python -m unittest
    # - name: Check coverage
      # Здесь --cov=minesweeper выбирает директорию, для которой считать покрытие тестами
      # run: |
      #  pytest --cov=irc-client
      # Дополнительно можно запустить pytest --cov=minesweeper --cov-report html:cov_html
      # И научиться загружать отчёт из папки cov_html в артифакты workflow
      # В этом поможет пример из документации:
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#packaging-workflow-data-as-artifacts
